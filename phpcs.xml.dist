<?xml version="1.0"?>
<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="Really Simple Plugins" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/squizlabs/PHP_CodeSniffer/master/phpcs.xsd">

	<description>Burst specific standards</description>

	<!--
	#############################################################################
	COMMAND LINE ARGUMENTS
	https://github.com/squizlabs/PHP_CodeSniffer/wiki/Annotated-Ruleset
	#############################################################################
	-->

	<file>.</file>

	<!-- Exclude the Composer Vendor directory. -->
	<exclude-pattern>/vendor/*</exclude-pattern>
	<exclude-pattern>/tests/*</exclude-pattern>

	<!-- Exclude the Node Modules directory. -->
	<exclude-pattern>/node_modules/*</exclude-pattern>
	<exclude-pattern>/helpers/*</exclude-pattern>
	<exclude-pattern>*/imprintjs/*</exclude-pattern>
	<exclude-pattern>gulpfile.js</exclude-pattern>
	<exclude-pattern>build/*</exclude-pattern>
	<exclude-pattern>*.min.js</exclude-pattern>
	<!--	Exlcude all JS from rules-->
	<exclude-pattern>*.js</exclude-pattern>

	<!-- Exclude minified CSS file. -->
	<exclude-pattern>*min.css</exclude-pattern>

	<!-- Strip the filepaths down to the relevant bit. -->
	<arg name="basepath" value="."/>

	<!-- Check up to 8 files simultaneously. -->
	<arg name="parallel" value="8"/>


	<!--
	#############################################################################
	SET UP THE RULESETS
	#############################################################################
	-->

	<!-- Include the WordPress-Extra standard. -->
	<rule ref="WordPress-Extra">
		<!--
		We may want a middle ground though. The best way to do this is add the
		entire ruleset, then rule by rule, remove ones that don't suit a project.
		We can do this by running `phpcs` with the '-s' flag, which allows us to
		see the names of the sniffs reporting errors.
		Once we know the sniff names, we can opt to exclude sniffs which don't
		suit our project like so.

		The below two examples just show how you can exclude rules/error codes.
		They are not intended as advice about which sniffs to exclude.
		-->

		<!--
		<exclude name="WordPress.WhiteSpace.ControlStructureSpacing"/>
		<exclude name="Modernize.FunctionCalls.Dirname.Nested"/>
		-->

	</rule>

	<!-- Let's also check that everything is properly documented. -->
	<rule ref="WordPress-Docs"/>

	<!-- Add in some extra rules from other standards. -->
	<rule ref="Generic.Commenting.Todo"/>

	<!-- Check for PHP cross-version compatibility. -->
	<!--
	To enable this, the PHPCompatibilityWP standard needs
	to be installed.
	See the readme for installation instructions:
	https://github.com/PHPCompatibility/PHPCompatibilityWP
	For more information, also see:
	https://github.com/PHPCompatibility/PHPCompatibility
	-->
	<!--
	<config name="testVersion" value="5.6-"/>
	<rule ref="PHPCompatibilityWP">
		<include-pattern>*\.php</include-pattern>
	</rule>
	-->

	<config name="testVersion" value="7.2-"/>
	<rule ref="PHPCompatibilityWP">
		<include-pattern>*\.php$</include-pattern>
	</rule>
	<!--
	#############################################################################
	SNIFF SPECIFIC CONFIGURATION
	#############################################################################
	-->

	<!--
	To get the optimal benefits of using WordPressCS, we should add a couple of
	custom properties.
	Adjust the values of these properties to fit our needs.

	For information on additional custom properties available, check out
	the wiki:
	https://github.com/WordPress/WordPress-Coding-Standards/wiki/Customizable-sniff-properties
	-->
	<config name="minimum_wp_version" value="6.0"/>

	<rule ref="WordPress.WP.I18n">
		<properties>
			<property name="text_domain" type="array">
				<element value="burst-statistics"/>
				<element value="library-textdomain"/>
			</property>
		</properties>
	</rule>

<!-- Exclude all files from this WordPress.WP.I18n.UnorderedPlaceholdersText	-->
	<rule ref="WordPress.WP.I18n.UnorderedPlaceholdersText">
		<exclude-pattern>*.php</exclude-pattern>
	</rule>

	<rule ref="WordPress.WP.I18n.MissingArg">
		<properties>
			<property name="text_domain" type="array">
				<element value="burst-statistics"/>
				<element value="library-textdomain"/>
			</property>
		</properties>
	</rule>

	<!-- Exclude JS files for WordPress.WhiteSpace.OperatorSpacing-->
	<rule ref="WordPress.WhiteSpace.OperatorSpacing">
		<exclude-pattern>*.js</exclude-pattern>
	</rule>

	<rule ref="WordPress.WP.I18n.MissingArgText">
		<properties>
			<property name="text_domain" type="array">
				<element value="burst-statistics"/>
				<element value="library-textdomain"/>
			</property>
		</properties>
	</rule>

	<rule ref="WordPress.WP.I18n.NonSingularStringLiteralText">
		<properties>
			<property name="text_domain" type="array">
				<element value="burst-statistics"/>
				<element value="library-textdomain"/>
			</property>
		</properties>
	</rule>

	<rule ref="WordPress.WP.I18n.NonSingularStringLiteral">
		<properties>
			<property name="text_domain" type="array">
				<element value="burst-statistics"/>
				<element value="library-textdomain"/>
			</property>
		</properties>
	</rule>

	<rule ref="WordPress.WP.I18n.NonSingularConcatenatedString">
		<properties>
			<property name="text_domain" type="array">
				<element value="burst-statistics"/>
				<element value="library-textdomain"/>
			</property>
		</properties>
	</rule>

	<rule ref="WordPress.WP.I18n.NonSingularConcatenatedStringText">
		<properties>
			<property name="text_domain" type="array">
				<element value="burst-statistics"/>
				<element value="library-textdomain"/>
			</property>
		</properties>
	</rule>


	<rule ref="WordPress.NamingConventions.PrefixAllGlobals">
		<properties>
			<property name="prefixes" type="array">
				<element value="burst"/>
			</property>
		</properties>
	</rule>

</ruleset>



<!--		<?xml version="1.0"?>-->
<!--<ruleset name="WordPress Coding Standards based custom ruleset for your plugin">-->
<!--<description>Generally-applicable sniffs for WordPress plugins.</description>-->

<!--&lt;!&ndash; What to scan &ndash;&gt;-->
<!--<file>.</file>-->
<!--<exclude-pattern>/vendor/</exclude-pattern>-->
<!--<exclude-pattern>/node_modules/</exclude-pattern>-->

<!--&lt;!&ndash; How to scan &ndash;&gt;-->
<!--&lt;!&ndash; Usage instructions: https://github.com/squizlabs/PHP_CodeSniffer/wiki/Usage &ndash;&gt;-->
<!--&lt;!&ndash; Annotated ruleset: https://github.com/squizlabs/PHP_CodeSniffer/wiki/Annotated-ruleset.xml &ndash;&gt;-->
<!--<arg value="sp"/> &lt;!&ndash; Show sniff and progress &ndash;&gt;-->
<!--<arg name="basepath" value="./"/>&lt;!&ndash; Strip the file paths down to the relevant bit &ndash;&gt;-->
<!--<arg name="colors"/>-->
<!--<arg name="extensions" value="php"/>-->
<!--<arg name="parallel" value="8"/>&lt;!&ndash; Enables parallel processing when available for faster results. &ndash;&gt;-->

<!--&lt;!&ndash; Rules: Check PHP version compatibility &ndash;&gt;-->
<!--&lt;!&ndash; https://github.com/PHPCompatibility/PHPCompatibility#sniffing-your-code-for-compatibility-with-specific-php-versions &ndash;&gt;-->
<!--<config name="testVersion" value="5.6-"/>-->
<!--&lt;!&ndash; https://github.com/PHPCompatibility/PHPCompatibilityWP &ndash;&gt;-->
<!--<rule ref="PHPCompatibilityWP"/>-->

<!--&lt;!&ndash; Rules: WordPress Coding Standards &ndash;&gt;-->
<!--&lt;!&ndash; https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards &ndash;&gt;-->
<!--&lt;!&ndash; https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/wiki/Customizable-sniff-properties &ndash;&gt;-->
<!--<config name="minimum_supported_wp_version" value="4.6"/>-->
<!--<rule ref="WordPress"/>-->
<!--<rule ref="WordPress.NamingConventions.PrefixAllGlobals">-->
<!--	<properties>-->
<!--		&lt;!&ndash; Value: replace the function, class, and variable prefixes used. Separate multiple prefixes with a comma. &ndash;&gt;-->
<!--		<property name="prefixes" type="array" value="my-plugin"/>-->
<!--	</properties>-->
<!--</rule>-->
<!--<rule ref="WordPress.WP.I18n">-->
<!--	<properties>-->
<!--		&lt;!&ndash; Value: replace the text domain used. &ndash;&gt;-->
<!--		<property name="text_domain" type="array" value="my-plugin"/>-->
<!--	</properties>-->
<!--</rule>-->
<!--<rule ref="WordPress.WhiteSpace.ControlStructureSpacing">-->
<!--	<properties>-->
<!--		<property name="blank_line_check" value="true"/>-->
<!--	</properties>-->
<!--</rule>-->
<!--</ruleset>-->
